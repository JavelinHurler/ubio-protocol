{
  "$id": "https://protocol.automationcloud.net/schema.json",
  "domains": {
    "Generic": {
      "description": "Generic domain contains type definitions used in other domains.",
      "inputs": {},
      "outputs": {},
      "types": {
        "URL": {
          "type": "string",
          "description": "URL Record, as defined by <a href=\"https://url.spec.whatwg.org/#concept-url\" target=\"_blank\">WHATWG URL Standard</a>.",
          "format": "url"
        },
        "Account": {
          "type": "object",
          "description": "Account information, typically required for automating user sign up / sign in flows.",
          "properties": {
            "email": {
              "type": "string",
              "description": "Account email, typically used for user sign up / sign in, as well as contact information.<br/>Note: most websites will send receipt and/or confirmation emails when order is placed successfully.<br/>Automation may result in registering new user account with this email address, and may fail if account with specified email already exists. We recommend you <a href=\"https://docs.automationcloud.net/v2.0/docs/email-proxy\" target=\"_blank\">use an email proxy to mitigate this issue</a>.",
              "format": "email"
            },
            "password": {
              "type": "string",
              "description": "May be omitted if particular website does not require user sign in / sign up. Automation may fail if password is required on a particular website but not provided. One strategy could be to always generate random passwords to create one-time account.",
              "default": ""
            },
            "phone": {
              "description": "Account phone number, may also be used as contact details.",
              "$ref": "#/domains/Generic/types/Phone"
            },
            "isExisting": {
              "description": "If value is <code>true</code> automation will try to use account details to perform sign in instead of sign up. Automation will fail if incorrect account details are specified.",
              "type": "boolean"
            }
          },
          "required": [
            "email",
            "phone",
            "isExisting"
          ]
        },
        "Person": {
          "type": "object",
          "description": "Basic information about person's identity.",
          "properties": {
            "title": {
              "type": "string",
              "description": "",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in ID."
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in ID."
            }
          },
          "required": [
            "title",
            "firstName",
            "lastName"
          ]
        },
        "Address": {
          "type": "object",
          "description": "Physical address information, typically used as part of billing or shipping address objects.",
          "properties": {
            "line1": {
              "type": "string",
              "description": "Street name with house number."
            },
            "line2": {
              "type": "string",
              "description": "Additional address information (e.g. flat)."
            },
            "city": {
              "type": "string",
              "description": "Name of city, town or other settlement."
            },
            "postcode": {
              "type": "string",
              "description": "Postcode in country-specific format, e.g. 5-digit number in US or <code>E3 3RP</code> in UK."
            },
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode"
            },
            "countrySubdivision": {
              "$ref": "#/domains/Generic/types/CountrySubdivision"
            }
          },
          "required": [
            "line1",
            "line2",
            "city",
            "postcode",
            "countryCode",
            "countrySubdivision"
          ]
        },
        "Phone": {
          "type": "object",
          "description": "Phone information, typically used on contact details pages.",
          "properties": {
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode"
            },
            "number": {
              "type": "string",
              "minLength": 9,
              "description": "Mobile phone number (numbers only, excluding country code)."
            }
          },
          "required": [
            "countryCode",
            "number"
          ]
        },
        "PriceConsent": {
          "type": "object",
          "description": "Price consent object used in final price confirmation flow.<br/>When automation reaches final price (typically happens immediately before placing the order) it will emit <code>finalPrice</code> object in output and will wait for consent from you. You then need to provide the exact copy of this object as <code>finalPriceConsent</code> input.",
          "properties": {
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "additionalProperties": false,
          "required": [
            "price"
          ]
        },
        "Price": {
          "type": "object",
          "description": "Basic price information.",
          "properties": {
            "currencyCode": {
              "$ref": "#/domains/Generic/types/CurrencyCode"
            },
            "value": {
              "type": "integer",
              "minimum": 0,
              "description": "A positive integer in the smallest currency unit (100 for Â£1.00)."
            }
          },
          "required": [
            "currencyCode",
            "value"
          ],
          "additionalProperties": false
        },
        "Payment": {
          "type": "object",
          "description": "Payment information, including card details and billing address.",
          "properties": {
            "card": {
              "$ref": "#/domains/Generic/types/PaymentCard"
            },
            "person": {
              "$ref": "#/domains/Generic/types/Person"
            },
            "address": {
              "$ref": "#/domains/Generic/types/Address"
            }
          },
          "required": [
            "card",
            "person",
            "address"
          ]
        },
        "PaymentCard": {
          "type": "object",
          "description": "Payment information for card payment. Note: card number should not be submitted in plain text as per PCI DSS. Use <code>panToken</code> to provide it securely instead.",
          "properties": {
            "type": {
              "type": "string",
              "description": "Card type, debit or credit.",
              "enum": [
                "debit",
                "credit"
              ]
            },
            "brand": {
              "type": "string",
              "description": "Card brand, must be one of the supported card brands. Automation may fail if a specific card brand is not supported on a particular website.",
              "enum": [
                "visa",
                "mastercard",
                "amex",
                "discover"
              ]
            },
            "expirationDate": {
              "type": "string",
              "description": "Expiration date in YYYY-MM format as written on card. Example: <code>2020-04</code>",
              "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])$",
              "minLength": 7,
              "maxLength": 7
            },
            "name": {
              "type": "string",
              "description": "Cardholder's name as written on card."
            },
            "cvv": {
              "type": "string",
              "description": "Security code written on card, 3- or 4-digit number.",
              "minLength": 3,
              "maxLength": 4
            }
          },
          "required": [
            "type",
            "brand",
            "expirationDate",
            "name",
            "cvv"
          ]
        },
        "PanToken": {
          "type": "string",
          "description": "An encrypted PAN token, obtained from Automation Cloud Vault. Please consult \"Vaulting Payment Card Information\" section of Documentation for information on how to acquire it.",
          "minLength": 20
        },
        "CountryCode": {
          "type": "string",
          "title": "ISO 3166-1 alpha-2 Country Code",
          "description": "ISO 3166-1 alpha-2 code representing the country. United Kingdom is officially assigned the alpha-2 code gb rather than uk. Lowercase.",
          "minLength": 2,
          "maxLength": 2,
          "enum": [
            "af",
            "ax",
            "al",
            "dz",
            "as",
            "ad",
            "ao",
            "ai",
            "aq",
            "ag",
            "ar",
            "am",
            "aw",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bm",
            "bt",
            "bo",
            "bq",
            "ba",
            "bw",
            "bv",
            "br",
            "io",
            "bn",
            "bg",
            "bf",
            "bi",
            "kh",
            "cm",
            "ca",
            "cv",
            "ky",
            "cf",
            "td",
            "cl",
            "cn",
            "cx",
            "cc",
            "co",
            "km",
            "cg",
            "cd",
            "ck",
            "cr",
            "ci",
            "hr",
            "cu",
            "cw",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "et",
            "fk",
            "fo",
            "fj",
            "fi",
            "fr",
            "gf",
            "pf",
            "tf",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gi",
            "gr",
            "gl",
            "gd",
            "gp",
            "gu",
            "gt",
            "gg",
            "gn",
            "gw",
            "gy",
            "ht",
            "hm",
            "va",
            "hn",
            "hk",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "im",
            "il",
            "it",
            "jm",
            "jp",
            "je",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mo",
            "mk",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mq",
            "mr",
            "mu",
            "yt",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ms",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nc",
            "nz",
            "ni",
            "ne",
            "ng",
            "nu",
            "nf",
            "mp",
            "no",
            "om",
            "pk",
            "pw",
            "ps",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pn",
            "pl",
            "pt",
            "pr",
            "qa",
            "re",
            "ro",
            "ru",
            "rw",
            "bl",
            "sh",
            "kn",
            "lc",
            "mf",
            "pm",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sx",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "gs",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "sj",
            "sz",
            "se",
            "ch",
            "sy",
            "tw",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "tk",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tc",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "um",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "vg",
            "vi",
            "wf",
            "eh",
            "ye",
            "zm",
            "zw"
          ]
        },
        "CountrySubdivision": {
          "type": "string",
          "description": "Full name of country subdivision (e.g. state, region, county, etc.), except for US states which require 2 letter code. Lowercased."
        },
        "CurrencyCode": {
          "type": "string",
          "minLength": 3,
          "maxLength": 3,
          "title": "ISO 4217 Currency Code",
          "description": "ISO 4217 3-letter code representing the currency. Lowercase.",
          "enum": [
            "all",
            "afn",
            "ars",
            "awg",
            "aud",
            "azn",
            "bsd",
            "bbd",
            "byn",
            "bzd",
            "bmd",
            "bob",
            "bam",
            "bwp",
            "bgn",
            "brl",
            "bnd",
            "khr",
            "cad",
            "kyd",
            "clp",
            "cny",
            "cop",
            "crc",
            "hrk",
            "cup",
            "czk",
            "dkk",
            "dop",
            "xcd",
            "egp",
            "svc",
            "eur",
            "fkp",
            "fjd",
            "ghs",
            "gip",
            "gtq",
            "ggp",
            "gyd",
            "hnl",
            "hkd",
            "huf",
            "isk",
            "inr",
            "idr",
            "irr",
            "imp",
            "ils",
            "jmd",
            "jpy",
            "jep",
            "kzt",
            "kpw",
            "krw",
            "kgs",
            "lak",
            "lbp",
            "lrd",
            "mkd",
            "myr",
            "mur",
            "mxn",
            "mnt",
            "mzn",
            "nad",
            "npr",
            "ang",
            "nzd",
            "nio",
            "ngn",
            "nok",
            "omr",
            "pkr",
            "pab",
            "pyg",
            "pen",
            "php",
            "pln",
            "qar",
            "ron",
            "rub",
            "shp",
            "sar",
            "rsd",
            "scr",
            "sgd",
            "sbd",
            "sos",
            "zar",
            "lkr",
            "sek",
            "chf",
            "srd",
            "syp",
            "twd",
            "thb",
            "ttd",
            "try",
            "tvd",
            "uah",
            "gbp",
            "usd",
            "uyu",
            "uzs",
            "vef",
            "vnd",
            "yer",
            "zwd"
          ]
        }
      }
    },
    "FlightBooking": {
      "description": "Allows automating airplane tickets booking on airline websites and OTAs.",
      "inputs": {
        "options": {
          "typeRef": "#/domains/FlightBooking/types/Options",
          "default": {}
        },
        "url": {
          "typeRef": "#/domains/Generic/types/URL",
          "description": "Website entry point. Should be a deep link to either flight page or flight selection page."
        },
        "flight": {
          "typeRef": "#/domains/FlightBooking/types/Flight",
          "description": "A specification of flights to book. Currently only includes outbound and optional inbound flight."
        },
        "account": {
          "typeRef": "#/domains/Generic/types/Account",
          "description": "Account information for filling in contact details.<br/>Receipts and booking references will typically be sent to specified <code>email</code>.<br/>Some websites also require registering user account, in which case <code>password</code> must be provided."
        },
        "passengers": {
          "typeRef": "#/domains/FlightBooking/types/Passengers"
        },
        "payment": {
          "typeRef": "#/domains/Generic/types/Payment"
        },
        "selectedFare": {
          "typeRef": "#/domains/FlightBooking/types/Fare",
          "description": "Requested when fare selection is required by website.<br/>At this point <code>availableFares</code> output should contain information about available fares.<br/>Note: on deep links with pre-selected flight this input is not required.<br/>Automation may fail if incorrect fare is specified, or if fare is no longer available."
        },
        "selectedSeatIds": {
          "typeRef": "#/domains/FlightBooking/types/SelectedSeatIds"
        },
        "panToken": {
          "typeRef": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
          "typeRef": "#/domains/Generic/types/PriceConsent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided."
        }
      },
      "outputs": {
        "availableFares": {
          "typeRef": "#/domains/FlightBooking/types/AvailableFares",
          "description": "Emitted when actual fares information is collected. Client is then expected to provide <code>selectedFare</code> input which should match one of the items."
        },
        "availableSeats": {
          "typeRef": "#/domains/FlightBooking/types/AvailableSeats"
        },
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "typeRef": "#/domains/Generic/types/PriceConsent"
        },
        "bookingConfirmation": {
          "typeRef": "#/domains/FlightBooking/types/BookingConfirmation"
        }
      },
      "types": {
        "Options": {
          "type": "object",
          "description": "Flags for enabling optional automation features like seat selection. Clients should send <code>false</code> or omit flags if specific features are not implemented on their end.",
          "experimental": true,
          "properties": {
            "fareSelection": {
              "type": "boolean",
              "description": "If <code>true</code>, automation will request <code>selectedFare</code> for fare selection flow.<br/>Automation may fail if deep link points to page where fare selection is mandatory.",
              "default": false
            },
            "seatSelection": {
              "type": "boolean",
              "description": "If <code>true</code>, automation will request <code>selectedSeatIds</code> for seat selection.",
              "default": false
            }
          }
        },
        "Flight": {
          "type": "object",
          "properties": {
            "cabinClass": {
              "$ref": "#/domains/FlightBooking/types/CabinClass"
            },
            "from": {
              "$ref": "#/domains/FlightBooking/types/DatePlace"
            },
            "to": {
              "$ref": "#/domains/FlightBooking/types/DatePlace"
            },
            "return": {
              "$ref": "#/domains/FlightBooking/types/ReturnFlight"
            }
          },
          "required": [
            "cabinClass",
            "from",
            "to"
          ],
          "additionalProperties": true
        },
        "ReturnFlight": {
          "type": "object",
          "description": "If specified, return flight will be booked in the same automation.",
          "properties": {
            "from": {
              "$ref": "#/domains/FlightBooking/types/DatePlace"
            },
            "to": {
              "$ref": "#/domains/FlightBooking/types/DatePlace"
            }
          },
          "required": [
            "from",
            "to"
          ]
        },
        "Passengers": {
          "type": "array",
          "description": "An array with details for each passenger.",
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "$ref": "#/domains/FlightBooking/types/Passenger"
          }
        },
        "Passenger": {
          "type": "object",
          "properties": {
            "title": {
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in ID."
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in ID."
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Passenger's date of birth in YYYY-MM-DD format. Example: <code>1976-01-21</code>.",
              "format": "date"
            },
            "addAdditionalLuggage": {
              "type": "integer",
              "minimum": 0,
              "maximum": 3,
              "default": 0
            },
            "id": {
              "$ref": "#/domains/FlightBooking/types/PassengerId"
            }
          },
          "required": [
            "title",
            "firstName",
            "lastName",
            "dateOfBirth",
            "addAdditionalLuggage"
          ]
        },
        "PassengerId": {
          "type": "object",
          "experimental": true,
          "description": "Passenger ID (passport or other travel document).",
          "properties": {
            "type": {
              "type": "string"
            },
            "number": {
              "type": "string"
            },
            "expDate": {
              "type": "string",
              "format": "date"
            },
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode"
            }
          }
        },
        "CabinClass": {
          "type": "string",
          "enum": [
            "economy",
            "premium economy",
            "business",
            "first",
            "supersonic"
          ]
        },
        "Fare": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "cabinClass": {
              "$ref": "#/domains/FlightBooking/types/CabinClass"
            },
            "fareFamily": {
              "type": "string"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "cabinClass",
            "fareFamily",
            "price"
          ]
        },
        "AvailableFares": {
          "type": "array",
          "description": "A list of available fares found on the website.",
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "$ref": "#/domains/FlightBooking/types/Fare"
          }
        },
        "DatePlace": {
          "type": "object",
          "properties": {
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode"
            },
            "dateTime": {
              "type": "string",
              "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-3][0-9]) [012][0-9]:[0-5][0-9]$",
              "description": "Date and time of flight (airport local time)"
            },
            "airportCode": {
              "type": "string",
              "minLength": 3,
              "maxLength": 3,
              "pattern": "^[A-Z]{3}$",
              "description": "International Air Transport Association airport code"
            }
          },
          "required": [
            "dateTime",
            "airportCode"
          ]
        },
        "AvailableSeats": {
          "type": "array",
          "description": "Emitted when seat availability information is collected. Client is then expected to provide <code>selectedSeatIds</code> input with selected seats for each passenger.",
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "$ref": "#/domains/FlightBooking/types/Seat"
          }
        },
        "SelectedSeatIds": {
          "type": "array",
          "description": "An array of <code>seatId</code> selected per each corresponding passenger.<br/>Automation may fail if provided seat ids are incorrect or no longer available.",
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "type": "string"
          }
        },
        "Seat": {
          "type": "object",
          "description": "Seat selection metadata.",
          "properties": {
            "seatId": {
              "type": "string",
              "description": "Seat number as extracted from website. Example: \"07A\""
            },
            "available": {
              "type": "boolean",
              "description": "<code>true</code> if website allows selecting this seat, <code>false</code> otherwise"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Seat price, if such information is available."
            }
          },
          "required": [
            "seatId",
            "available"
          ],
          "additionalProperties": false
        },
        "BookingConfirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "bookingReference": {
              "type": "string",
              "description": "Booking reference grabbed from the page."
            },
            "message": {
              "type": "string",
              "description": "Message about successful booking."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Price, if found on the successful booking page."
            }
          },
          "additionalProperties": false,
          "required": [
            "bookingReference"
          ]
        }
      }
    },
    "Internal": {
      "description": "Internal domain for testing platform features.",
      "private": true,
      "inputs": {
        "options": {
          "typeRef": "#/domains/Internal/types/Options",
          "default": {}
        },
        "url": {
          "typeRef": "#/domains/Generic/types/URL"
        },
        "finalPriceConsent": {
          "typeRef": "#/domains/Generic/types/PriceConsent"
        },
        "panToken": {
          "typeRef": "#/domains/Generic/types/PanToken"
        }
      },
      "outputs": {
        "object": {
          "typeRef": "#/domains/Internal/types/Object"
        },
        "finalPrice": {
          "typeRef": "#/domains/Generic/types/PriceConsent"
        }
      },
      "types": {
        "Object": {
          "type": "object",
          "description": "An object of arbitrary structure."
        },
        "Options": {
          "type": "object",
          "description": "Flags for testing optional features.",
          "properties": {
            "flag": {
              "type": "boolean",
              "default": false
            }
          }
        }
      }
    }
  }
}